<?php

/**
 * Page Edit Per User
 * 
 * Assign edit access to users on a per-page basis.
 *
 * The user must already have page-edit permission on one of their roles in order to get 
 * edit access to assigned pages. Otherwise, they will only gain view access. 
 *
 * This module is fully functional as-is, but intended as a proof-of-concept for those wanting
 * to go further with adding custom edit and/or view access.
 *
 * Copyright 2012 by Ryan Cramer 
 * http://processwire.com
 *
 */

class PageEditPerUser extends WireData implements Module {

	public static function getModuleInfo() {
		return array(
			'title' => 'Page Edit Per User', 
			'version' => 1, 
			'summary' => 'Assign edit access to users on a per-page basis.',
			'singular' => true, 
			'autoload' => true, 
			);
	}

	/**
	 * Attach our hooks to Page::editable and Page::viewable
	 *
	 */
	public function init() {
		$this->addHookAfter('Page::editable', $this, 'hookPageEditable'); 
		$this->addHookAfter('Page::viewable', $this, 'hookPageEditable'); 
	}

	/**
	 * Page::editable hook
	 *
	 */
	public function hookPageEditable($event) {
		if($event->return) return;
		$event->return = $this->user->hasPermission('page-edit') && $this->user->editable_pages->has($event->object);
	}

	/**
	 * Page::viewable hook
	 *
	 */
	public function hookPageViewable($event) {
		if($event->return) return;
		$event->return = $this->user->editable_pages->has($event->object);
	}

	/**
	 * Install the module and add the 'editable_pages' field to the user template
	 *
	 */
	public function ___install() {
		$field = new Field(); 
		$field->name = 'editable_pages';
		$field->label = 'Pages user may edit';
		$field->labelFieldName = 'path';
		$field->type = wire('modules')->get('FieldtypePage'); 
		$field->inputfield = 'InputfieldPageListSelectMultiple';
		$field->description = 
			'In order to edit pages, the user must also have a role with page-edit permission. ' . 
			'If they do not have page-edit permission, they will only be able to view the selected pages.';
		$field->save();

		$fieldgroup = $this->fieldgroups->get('user');
		$fieldgroup->add($field);
		$fieldgroup->save();

		$this->message("Added field 'editable_pages' to the user template.");
	}

	/**
	 * Uninstall 'editable_pages' field
	 *
	 */
	public function ___uninstall() {
		$field = $this->fields->get('editable_pages');
		$fieldgroup = $this->fieldgroups->get('user');
		if($field && $fieldgroup) {
			$fieldgroup->remove($field);
			$fieldgroup->save();
		}
		$this->fields->delete($field);
		$this->message("Removed field: editable_pages");
	}

}

